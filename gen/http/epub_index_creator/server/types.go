// Code generated by goa v3.15.0, DO NOT EDIT.
//
// epub_index_creator HTTP server types
//
// Command:
// $ goa gen github.com/marutaku/epub-index-creator/design

package server

import (
	epubindexcreator "github.com/marutaku/epub-index-creator/gen/epub_index_creator"
)

// ListResponseBody is the type of the "epub_index_creator" service "List"
// endpoint HTTP response body.
type ListResponseBody struct {
	// ISBN of the book
	Isbn *string `form:"isbn,omitempty" json:"isbn,omitempty" xml:"isbn,omitempty"`
	// Title of the book
	Title *string `form:"title,omitempty" json:"title,omitempty" xml:"title,omitempty"`
	// Author of the book
	Author *string `form:"author,omitempty" json:"author,omitempty" xml:"author,omitempty"`
	// Pages of the book
	Pages []*PageResponseBody `form:"pages,omitempty" json:"pages,omitempty" xml:"pages,omitempty"`
}

// PageResponseBody is used to define fields on response body types.
type PageResponseBody struct {
	// Title of the page
	Title *string `form:"title,omitempty" json:"title,omitempty" xml:"title,omitempty"`
	// Keywords of the page
	Keywords []*KeywordResponseBody `form:"keywords,omitempty" json:"keywords,omitempty" xml:"keywords,omitempty"`
}

// KeywordResponseBody is used to define fields on response body types.
type KeywordResponseBody struct {
	// Keyword of the page
	Keyword *string `form:"keyword,omitempty" json:"keyword,omitempty" xml:"keyword,omitempty"`
}

// NewListResponseBody builds the HTTP response body from the result of the
// "List" endpoint of the "epub_index_creator" service.
func NewListResponseBody(res *epubindexcreator.Book) *ListResponseBody {
	body := &ListResponseBody{
		Isbn:   res.Isbn,
		Title:  res.Title,
		Author: res.Author,
	}
	if res.Pages != nil {
		body.Pages = make([]*PageResponseBody, len(res.Pages))
		for i, val := range res.Pages {
			body.Pages[i] = marshalEpubindexcreatorPageToPageResponseBody(val)
		}
	}
	return body
}

// NewListPayload builds a epub_index_creator service List endpoint payload.
func NewListPayload(isbn string) *epubindexcreator.ListPayload {
	v := &epubindexcreator.ListPayload{}
	v.Isbn = isbn

	return v
}
